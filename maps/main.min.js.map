{"version":3,"sources":["revealer.js","main.js"],"names":[],"mappingsfile":"../js/main.min.js","sourcesContent":[";(function(window) {\n\n\t'use strict';\n\n\t// Helper vars and functions.\n\tfunction extend(a, b) {\n\t\tfor(var key in b) { \n\t\t\tif( b.hasOwnProperty( key ) ) {\n\t\t\t\ta[key] = b[key];\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\tfunction createDOMEl(type, className, content) {\n\t\tvar el = document.createElement(type);\n\t\tel.className = className || '';\n\t\tel.innerHTML = content || '';\n\t\treturn el;\n\t}\n\n\t/**\n\t * RevealFx obj.\n\t */\n\tfunction RevealFx(el, options) {\n\t\tthis.el = el;\n\t\tthis.options = extend({}, this.options);\n\t\textend(this.options, options);\n\t\tthis._init();\n\t}\n\n\t/**\n\t * RevealFx options.\n\t */\n\tRevealFx.prototype.options = {\n\t\t// If true, then the content will be hidden until it´s \"revealed\".\n\t\tisContentHidden: true,\n\t\t// The animation/reveal settings. This can be set initially or passed when calling the reveal method.\n\t\trevealSettings: {\n\t\t\t// Animation direction: left right (lr) || right left (rl) || top bottom (tb) || bottom top (bt).\n\t\t\tdirection: 'lr',\n\t\t\t// Revealer´s background color.\n\t\t\tbgcolor: '#f0f0f0',\n\t\t\t// Animation speed. This is the speed to \"cover\" and also \"uncover\" the element (seperately, not the total time).\n\t\t\tduration: 500,\n\t\t\t// Animation easing. This is the easing to \"cover\" and also \"uncover\" the element.\n\t\t\teasing: 'easeInOutQuint',\n\t\t\t// percentage-based value representing how much of the area should be left covered.\n\t\t\tcoverArea: 0,\n\t\t\t// Callback for when the revealer is covering the element (halfway through of the whole animation).\n\t\t\tonCover: function(contentEl, revealerEl) { return false; },\n\t\t\t// Callback for when the animation starts (animation start).\n\t\t\tonStart: function(contentEl, revealerEl) { return false; },\n\t\t\t// Callback for when the revealer has completed uncovering (animation end).\n\t\t\tonComplete: function(contentEl, revealerEl) { return false; }\n\t\t}\n\t};\n\n\t/**\n\t * Init.\n\t */\n\tRevealFx.prototype._init = function() {\n\t\tthis._layout();\n\t};\n\n\t/**\n\t * Build the necessary structure.\n\t */\n\tRevealFx.prototype._layout = function() {\n\t\tvar position = getComputedStyle(this.el).position;\n\t\tif( position !== 'fixed' && position !== 'absolute' && position !== 'relative' ) {\n\t\t\tthis.el.style.position = 'relative';\n\t\t}\n\t\t// Content element.\n\t\tthis.content = createDOMEl('div', 'block-revealer__content', this.el.innerHTML);\n\t\tif( this.options.isContentHidden) {\n\t\t\tthis.content.style.opacity = 0;\n\t\t}\n\t\t// Revealer element (the one that animates)\n\t\tthis.revealer = createDOMEl('div', 'block-revealer__element');\n\t\tthis.el.classList.add('block-revealer');\n\t\tthis.el.innerHTML = '';\n\t\tthis.el.appendChild(this.content);\n\t\tthis.el.appendChild(this.revealer);\n\t};\n\n\t/**\n\t * Gets the revealer element´s transform and transform origin.\n\t */\n\tRevealFx.prototype._getTransformSettings = function(direction) {\n\t\tvar val, origin, origin_2;\n\n\t\tswitch (direction) {\n\t\t\tcase 'lr' : \n\t\t\t\tval = 'scale3d(0,1,1)';\n\t\t\t\torigin = '0 50%';\n\t\t\t\torigin_2 = '100% 50%';\n\t\t\t\tbreak;\n\t\t\tcase 'rl' : \n\t\t\t\tval = 'scale3d(0,1,1)';\n\t\t\t\torigin = '100% 50%';\n\t\t\t\torigin_2 = '0 50%';\n\t\t\t\tbreak;\n\t\t\tcase 'tb' : \n\t\t\t\tval = 'scale3d(1,0,1)';\n\t\t\t\torigin = '50% 0';\n\t\t\t\torigin_2 = '50% 100%';\n\t\t\t\tbreak;\n\t\t\tcase 'bt' : \n\t\t\t\tval = 'scale3d(1,0,1)';\n\t\t\t\torigin = '50% 100%';\n\t\t\t\torigin_2 = '50% 0';\n\t\t\t\tbreak;\n\t\t\tdefault : \n\t\t\t\tval = 'scale3d(0,1,1)';\n\t\t\t\torigin = '0 50%';\n\t\t\t\torigin_2 = '100% 50%';\n\t\t\t\tbreak;\n\t\t};\n\n\t\treturn {\n\t\t\t// transform value.\n\t\t\tval: val,\n\t\t\t// initial and halfway/final transform origin.\n\t\t\torigin: {initial: origin, halfway: origin_2},\n\t\t};\n\t};\n\n\t/**\n\t * Reveal animation. If revealSettings is passed, then it will overwrite the options.revealSettings.\n\t */\n\tRevealFx.prototype.reveal = function(revealSettings) {\n\t\t// Do nothing if currently animating.\n\t\tif( this.isAnimating ) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.isAnimating = true;\n\t\t\n\t\t// Set the revealer element´s transform and transform origin.\n\t\tvar defaults = { // In case revealSettings is incomplete, its properties deafault to:\n\t\t\t\tduration: 700,\n\t\t\t\teasing: 'easeOutQuint',\n\t\t\t\tdelay: 0,\n\t\t\t\tbgcolor: '#f0f0f0',\n\t\t\t\tdirection: 'lr',\n\t\t\t\tcoverArea: 0\n\t\t\t},\n\t\t\trevealSettings = revealSettings || this.options.revealSettings,\n\t\t\tdirection = revealSettings.direction || defaults.direction,\n\t\t\ttransformSettings = this._getTransformSettings(direction);\n\n\t\tthis.revealer.style.WebkitTransform = this.revealer.style.transform =  transformSettings.val;\n\t\tthis.revealer.style.WebkitTransformOrigin = this.revealer.style.transformOrigin =  transformSettings.origin.initial;\n\t\t\n\t\t// Set the Revealer´s background color.\n\t\tthis.revealer.style.backgroundColor = revealSettings.bgcolor || defaults.bgcolor;\n\t\t\n\t\t// Show it. By default the revealer element has opacity = 0 (CSS).\n\t\tthis.revealer.style.opacity = 1;\n\n\t\t// Animate it.\n\t\tvar self = this,\n\t\t\t// Second animation step.\n\t\t\tanimationSettings_2 = {\n\t\t\t\tcomplete: function() {\n\t\t\t\t\tself.isAnimating = false;\n\t\t\t\t\tif( typeof revealSettings.onComplete === 'function' ) {\n\t\t\t\t\t\trevealSettings.onComplete(self.content, self.revealer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// First animation step.\n\t\t\tanimationSettings = {\n\t\t\t\tdelay: revealSettings.delay || defaults.delay,\n\t\t\t\tcomplete: function() {\n\t\t\t\t\tself.revealer.style.WebkitTransformOrigin = self.revealer.style.transformOrigin = transformSettings.origin.halfway;\t\t\n\t\t\t\t\tif( typeof revealSettings.onCover === 'function' ) {\n\t\t\t\t\t\trevealSettings.onCover(self.content, self.revealer);\n\t\t\t\t\t}\n\t\t\t\t\tanime(animationSettings_2);\t\t\n\t\t\t\t}\n\t\t\t};\n\n\t\tanimationSettings.targets = animationSettings_2.targets = this.revealer;\n\t\tanimationSettings.duration = animationSettings_2.duration = revealSettings.duration || defaults.duration;\n\t\tanimationSettings.easing = animationSettings_2.easing = revealSettings.easing || defaults.easing;\n\n\t\tvar coverArea = revealSettings.coverArea || defaults.coverArea;\n\t\tif( direction === 'lr' || direction === 'rl' ) {\n\t\t\tanimationSettings.scaleX = [0,1];\n\t\t\tanimationSettings_2.scaleX = [1,coverArea/100];\n\t\t}\n\t\telse {\n\t\t\tanimationSettings.scaleY = [0,1];\n\t\t\tanimationSettings_2.scaleY = [1,coverArea/100];\n\t\t}\n\n\t\tif( typeof revealSettings.onStart === 'function' ) {\n\t\t\trevealSettings.onStart(self.content, self.revealer);\n\t\t}\n\t\tanime(animationSettings);\n\t};\n\t\n\twindow.RevealFx = RevealFx;\n\n})(window);\n\n","const blue = '#3F99FF';\nconst featured = '#C9DAF7';\n\n\n$(document).ready(function() {\n\t\n\t$(window).bind('load', function() {\n\t\tinit();\n\t});\n\t\n\t$( window ).resize(function() {\n\t\tdetect_window();\n\t});\n/*\n\t\n\tsmoothScroll.init({\n\t    selector: '[data-scroll]', // Selector for links (must be a class, ID, data attribute, or element tag)\n\t    selectorHeader: null, // Selector for fixed headers (must be a valid CSS selector) [optional]\n\t    speed: 800, // Integer. How fast to complete the scroll in milliseconds\n\t    easing: 'easeInOutCubic', // Easing pattern to use\n\t    offset: 100, // Integer. How far to offset the scrolling anchor location in pixels\n\t});\n\tts\n\tvar blazy = new Blazy({\n\t\tselector: ['.lazyload-img', '.lazyload-collection'],\n\t\toffset: 2000,\n\t\tloadInvisible: true\n\t});\t\n\t\n\tvar grid = $('.grid').masonry({\n\t\titemSelector: '.grid-item',\n\t\tcolumnWidth: '.grid-sizer',\n\t\tpercentPosition: true,\n\t});\n\t\n\tgrid.imagesLoaded().done(function() {\n\t\tgrid.masonry('layout');\n\t\t//grid.masonry('reloadItems');\n\t\t//lazyLoad();\n\t});\n*/\n\t\n});\n\nfunction detect_window() {\n\t\n\t// workaround for mobile svg support\n\tif ($(window).width() <= 550) {\n\t\t$('#logo-img').attr('src', 'img-min/logo.png');\n\t\t$('.arrow-down').attr('href', '#row-0');\n\t} else {\n\t\t$('#logo-img').attr('src', 'img-min/logo.svg');\n\t\t$('.arrow-down').attr('href', '#row-1');\n\t}\n}\n\nfunction init() {\n\tanimate_revealer();\n\tanimate_text();\n\tdetect_window();\n}\n\nfunction animate_revealer() {\n\t\tvar rev_logo = new RevealFx(document.querySelector('#rev-logo'), {\n\t\t\trevealSettings : {\n\t\t\t\tbgcolor: blue,\n\t\t\t\tdirection: 'lr',\n\t\t\t\tdelay: 1500,\n\t\t\t\tduration: 250,\n\t\t\t\teasing: 'easeInOutQuint',\n\t\t\t\tonCover: function(contentEl, revealerEl) {\n\t\t\t\t\tcontentEl.style.opacity = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\trev_logo.reveal();\n\t\n\tvar rev_featured = new RevealFx(document.querySelector('#rev-featured'), {\n\t\t\trevealSettings : {\n\t\t\t\tbgcolor: featured,\n\t\t\t\tdirection: 'bt',\n\t\t\t\tdelay: 500,\n\t\t\t\tduration: 500,\n\t\t\t\teasing: 'easeInOutQuint',\n\t\t\t\tonCover: function(contentEl, revealerEl) {\n\t\t\t\t\tcontentEl.style.opacity = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\n\t$('.featured-img').attr('src', 'img-min/project-cover/featured-0.png');\n\trev_featured.reveal();\n}\n\nfunction animate_text() {\n\tvar textTimeline = anime.timeline({\n\t  //direction: 'alternate',\n\t  loop: false,\n\t});\n\t\n\ttextTimeline\n\t\t.add({\n\t\t\ttargets: '.title-1',\n\t\t\trotate: [1.5, 0],\n\t\t\topacity: 1,\n\t\t\tduration: 500,\n\t\t\tdelay: 1000,\n\t\t\teasing: 'easeInOutSine',\n\t\t})\n\t\t.add({\n\t\t\ttargets: '.title-2',\n\t\t\trotate: [1.5, 0],\n\t\t\topacity: 1,\n\t\t\tduration: 500,\n\t\t\toffset: 1100,\n\t\t\teasing: 'easeInOutSine',\n\t\t})\n\t\t.add({\n\t\t\ttargets: '.title-3',\n\t\t\trotate: [1.5, 0],\n\t\t\topacity: 1,\n\t\t\tduration: 500,\n\t\t\toffset: 1200,\n\t\t\teasing: 'easeInOutSine',\n\t\t})\n\t\t.add({\n\t\t\ttargets: '.arrow-link',\n\t\t\topacity: 1,\n\t\t\tduration: 200,\n\t\t\toffset: 1500,\n\t\t\teasing: 'easeInOutSine',\n\t\t})\n}"]}